{"schema_version":"1.0.0","elements":[{"description":"`<paper-input-char-counter>` is a character counter for use with `<paper-input-container>`. It\nshows the number of characters entered in the input and the max length if it is specified.\n\n    <paper-input-container>\n      <input maxlength=\"20\">\n      <paper-input-char-counter></paper-input-char-counter>\n    </paper-input-container>\n\n### Styling\n\nThe following mixin is available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-input-char-counter` | Mixin applied to the element | `{}`","summary":"","path":"../../paper-input-char-counter.html","properties":[{"name":"_charCounterStr","type":"string","description":"","privacy":"protected","sourceRange":{"start":{"line":65,"column":6},"end":{"line":68,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"0\""}],"methods":[{"name":"attached","description":"","privacy":"protected","sourceRange":{"file":"paper-input-addon-behavior.html","start":{"line":21,"column":4},"end":{"line":25,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.PaperInputAddonBehavior"},{"name":"update","description":"This overrides the update function in PaperInputAddonBehavior.","privacy":"public","sourceRange":{"start":{"line":82,"column":4},"end":{"line":96,"column":5}},"metadata":{},"params":[{"name":"state","type":"{inputElement: (Element|undefined), value: (string|undefined), invalid: boolean}","description":"    inputElement: The input element.\n    value: The input value.\n    invalid: True if the input value is invalid."}]}],"demos":[],"metadata":{},"sourceRange":{"start":{"line":57,"column":10},"end":{"line":97,"column":3}},"privacy":"public","attributes":[],"events":[],"styling":{"cssVariables":[],"selectors":[]},"slots":[],"tagname":"paper-input-char-counter","superclass":"HTMLElement"},{"description":"`<paper-input-container>` is a container for a `<label>`, an `<iron-input>` or\n`<textarea>` and optional add-on elements such as an error message or character\ncounter, used to implement Material Design text fields.\n\nFor example:\n\n    <paper-input-container>\n      <label slot=\"label\">Your name</label>\n      <iron-input slot=\"input\">\n        <input>\n      </iron-input>\n      // In Polymer 1.0, you would use `<input is=\"iron-input\" slot=\"input\">` instead of the above.\n    </paper-input-container>\n\nYou can style the nested <input> however you want; if you want it to look like a\nMaterial Design input, you can style it with the --paper-input-container-shared-input-style mixin.\n\nDo not wrap `<paper-input-container>` around elements that already include it, such as `<paper-input>`.\nDoing so may cause events to bounce infinitely between the container and its contained element.\n\n### Listening for input changes\n\nBy default, it listens for changes on the `bind-value` attribute on its children nodes and perform\ntasks such as auto-validating and label styling when the `bind-value` changes. You can configure\nthe attribute it listens to with the `attr-for-value` attribute.\n\n### Using a custom input element\n\nYou can use a custom input element in a `<paper-input-container>`, for example to implement a\ncompound input field like a social security number input. The custom input element should have the\n`paper-input-input` class, have a `notify:true` value property and optionally implements\n`Polymer.IronValidatableBehavior` if it is validatable.\n\n    <paper-input-container attr-for-value=\"ssn-value\">\n      <label slot=\"label\">Social security number</label>\n      <ssn-input slot=\"input\" class=\"paper-input-input\"></ssn-input>\n    </paper-input-container>\n\n\nIf you're using a `<paper-input-container>` imperatively, it's important to make sure\nthat you attach its children (the `iron-input` and the optional `label`) before you\nattach the `<paper-input-container>` itself, so that it can be set up correctly.\n\n### Validation\n\nIf the `auto-validate` attribute is set, the input container will validate the input and update\nthe container styling when the input value changes.\n\n### Add-ons\n\nAdd-ons are child elements of a `<paper-input-container>` with the `add-on` attribute and\nimplements the `Polymer.PaperInputAddonBehavior` behavior. They are notified when the input value\nor validity changes, and may implement functionality such as error messages or character counters.\nThey appear at the bottom of the input.\n\n### Prefixes and suffixes\nThese are child elements of a `<paper-input-container>` with the `prefix`\nor `suffix` attribute, and are displayed inline with the input, before or after.\n\n    <paper-input-container>\n      <div slot=\"prefix\">$</div>\n      <label slot=\"label\">Total</label>\n      <iron-input slot=\"input\">\n        <input>\n      </iron-input>\n      // In Polymer 1.0, you would use `<input is=\"iron-input\" slot=\"input\">` instead of the above.\n      <paper-icon-button slot=\"suffix\" icon=\"clear\"></paper-icon-button>\n    </paper-input-container>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-input-container-color` | Label and underline color when the input is not focused | `--secondary-text-color`\n`--paper-input-container-focus-color` | Label and underline color when the input is focused | `--primary-color`\n`--paper-input-container-invalid-color` | Label and underline color when the input is is invalid | `--error-color`\n`--paper-input-container-input-color` | Input foreground color | `--primary-text-color`\n`--paper-input-container` | Mixin applied to the container | `{}`\n`--paper-input-container-disabled` | Mixin applied to the container when it's disabled | `{}`\n`--paper-input-container-label` | Mixin applied to the label | `{}`\n`--paper-input-container-label-focus` | Mixin applied to the label when the input is focused | `{}`\n`--paper-input-container-label-floating` | Mixin applied to the label when floating | `{}`\n`--paper-input-container-input` | Mixin applied to the input | `{}`\n`--paper-input-container-input-focus` | Mixin applied to the input when focused | `{}`\n`--paper-input-container-input-invalid` | Mixin applied to the input when invalid | `{}`\n`--paper-input-container-input-webkit-spinner` | Mixin applied to the webkit spinner | `{}`\n`--paper-input-container-input-webkit-clear` | Mixin applied to the webkit clear button | `{}`\n`--paper-input-container-ms-clear` | Mixin applied to the Internet Explorer clear button | `{}`\n`--paper-input-container-underline` | Mixin applied to the underline | `{}`\n`--paper-input-container-underline-focus` | Mixin applied to the underline when the input is focused | `{}`\n`--paper-input-container-underline-disabled` | Mixin applied to the underline when the input is disabled | `{}`\n`--paper-input-prefix` | Mixin applied to the input prefix | `{}`\n`--paper-input-suffix` | Mixin applied to the input suffix | `{}`\n\nThis element is `display:block` by default, but you can set the `inline` attribute to make it\n`display:inline-block`.","summary":"","path":"../../paper-input-container.html","properties":[{"name":"noLabelFloat","type":"boolean","description":"Set to true to disable the floating label. The label disappears when the input value is\nnot null.","privacy":"public","sourceRange":{"start":{"line":386,"column":6},"end":{"line":389,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"alwaysFloatLabel","type":"boolean","description":"Set to true to always float the floating label.","privacy":"public","sourceRange":{"start":{"line":394,"column":6},"end":{"line":397,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"attrForValue","type":"string","description":"The attribute to listen for value changes on.","privacy":"public","sourceRange":{"start":{"line":402,"column":6},"end":{"line":405,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"bind-value\""},{"name":"autoValidate","type":"boolean","description":"Set to true to auto-validate the input value when it changes.","privacy":"public","sourceRange":{"start":{"line":410,"column":6},"end":{"line":413,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"invalid","type":"boolean","description":"True if the input is invalid. This property is set automatically when the input value\nchanges if auto-validating, or when the `iron-input-validate` event is heard from a child.","privacy":"public","sourceRange":{"start":{"line":419,"column":6},"end":{"line":423,"column":7}},"metadata":{"polymer":{"observer":"\"_invalidChanged\""}},"defaultValue":"false"},{"name":"focused","type":"boolean","description":"True if the input has focus.","privacy":"public","sourceRange":{"start":{"line":428,"column":6},"end":{"line":433,"column":7}},"metadata":{"polymer":{"notify":true,"readOnly":true}},"defaultValue":"false"},{"name":"_addons","type":"Array","description":"","privacy":"protected","sourceRange":{"start":{"line":435,"column":6},"end":{"line":440,"column":7}},"metadata":{"polymer":{}}},{"name":"_inputHasContent","type":"boolean","description":"","privacy":"protected","sourceRange":{"start":{"line":442,"column":6},"end":{"line":445,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"_inputSelector","type":"string","description":"","privacy":"protected","sourceRange":{"start":{"line":447,"column":6},"end":{"line":450,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"input,iron-input,textarea,.paper-input-input\""},{"name":"_boundOnFocus","type":"Function","description":"","privacy":"protected","sourceRange":{"start":{"line":452,"column":6},"end":{"line":457,"column":7}},"metadata":{"polymer":{}}},{"name":"_boundOnBlur","type":"Function","description":"","privacy":"protected","sourceRange":{"start":{"line":459,"column":6},"end":{"line":464,"column":7}},"metadata":{"polymer":{}}},{"name":"_boundOnInput","type":"Function","description":"","privacy":"protected","sourceRange":{"start":{"line":466,"column":6},"end":{"line":471,"column":7}},"metadata":{"polymer":{}}},{"name":"_boundValueChanged","type":"Function","description":"","privacy":"protected","sourceRange":{"start":{"line":473,"column":6},"end":{"line":478,"column":7}},"metadata":{"polymer":{}}},{"name":"_valueChangedEvent","type":"Function","description":"","privacy":"protected","sourceRange":{"start":{"line":486,"column":4},"end":{"line":488,"column":5}},"metadata":{"polymer":{"readOnly":false}}},{"name":"_propertyForValue","type":"Function","description":"","privacy":"protected","sourceRange":{"start":{"line":490,"column":4},"end":{"line":492,"column":5}},"metadata":{"polymer":{"readOnly":false}}},{"name":"_inputElement","type":"Function","description":"","privacy":"protected","sourceRange":{"start":{"line":494,"column":4},"end":{"line":496,"column":5}},"metadata":{"polymer":{"readOnly":false}}},{"name":"_inputElementValue","type":"Function","description":"","privacy":"protected","sourceRange":{"start":{"line":498,"column":4},"end":{"line":500,"column":5}},"metadata":{"polymer":{"readOnly":false}}}],"methods":[{"name":"ready","description":"","privacy":"protected","sourceRange":{"start":{"line":502,"column":4},"end":{"line":508,"column":5}},"metadata":{},"params":[]},{"name":"attached","description":"","privacy":"protected","sourceRange":{"start":{"line":510,"column":4},"end":{"line":523,"column":5}},"metadata":{},"params":[]},{"name":"_onAddonAttached","description":"","privacy":"protected","sourceRange":{"start":{"line":525,"column":4},"end":{"line":536,"column":5}},"metadata":{},"params":[{"name":"event"}]},{"name":"_onFocus","description":"","privacy":"protected","sourceRange":{"start":{"line":538,"column":4},"end":{"line":540,"column":5}},"metadata":{},"params":[]},{"name":"_onBlur","description":"","privacy":"protected","sourceRange":{"start":{"line":542,"column":4},"end":{"line":545,"column":5}},"metadata":{},"params":[]},{"name":"_onInput","description":"","privacy":"protected","sourceRange":{"start":{"line":547,"column":4},"end":{"line":549,"column":5}},"metadata":{},"params":[{"name":"event"}]},{"name":"_onValueChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":551,"column":4},"end":{"line":567,"column":5}},"metadata":{},"params":[{"name":"event"}]},{"name":"_handleValue","description":"","privacy":"protected","sourceRange":{"start":{"line":569,"column":4},"end":{"line":584,"column":5}},"metadata":{},"params":[{"name":"inputElement"}]},{"name":"_handleValueAndAutoValidate","description":"","privacy":"protected","sourceRange":{"start":{"line":586,"column":4},"end":{"line":600,"column":5}},"metadata":{},"params":[{"name":"inputElement"}]},{"name":"_onIronInputValidate","description":"","privacy":"protected","sourceRange":{"start":{"line":602,"column":4},"end":{"line":604,"column":5}},"metadata":{},"params":[{"name":"event"}]},{"name":"_invalidChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":606,"column":4},"end":{"line":610,"column":5}},"metadata":{},"params":[]},{"name":"updateAddons","description":"Call this to update the state of add-ons.","privacy":"public","sourceRange":{"start":{"line":616,"column":4},"end":{"line":620,"column":5}},"metadata":{},"params":[{"name":"state","type":"Object","description":"Add-on state."}]},{"name":"_computeInputContentClass","description":"","privacy":"protected","sourceRange":{"start":{"line":622,"column":4},"end":{"line":659,"column":5}},"metadata":{},"params":[{"name":"noLabelFloat"},{"name":"alwaysFloatLabel"},{"name":"focused"},{"name":"invalid"},{"name":"_inputHasContent"}]},{"name":"_computeUnderlineClass","description":"","privacy":"protected","sourceRange":{"start":{"line":661,"column":4},"end":{"line":669,"column":5}},"metadata":{},"params":[{"name":"focused"},{"name":"invalid"}]},{"name":"_computeAddOnContentClass","description":"","privacy":"protected","sourceRange":{"start":{"line":671,"column":4},"end":{"line":679,"column":5}},"metadata":{},"params":[{"name":"focused"},{"name":"invalid"}]}],"demos":[],"metadata":{},"sourceRange":{"start":{"line":378,"column":10},"end":{"line":680,"column":3}},"privacy":"public","attributes":[{"name":"no-label-float","description":"Set to true to disable the floating label. The label disappears when the input value is\nnot null.","sourceRange":{"start":{"line":386,"column":6},"end":{"line":389,"column":7}},"metadata":{},"type":"boolean"},{"name":"always-float-label","description":"Set to true to always float the floating label.","sourceRange":{"start":{"line":394,"column":6},"end":{"line":397,"column":7}},"metadata":{},"type":"boolean"},{"name":"attr-for-value","description":"The attribute to listen for value changes on.","sourceRange":{"start":{"line":402,"column":6},"end":{"line":405,"column":7}},"metadata":{},"type":"string"},{"name":"auto-validate","description":"Set to true to auto-validate the input value when it changes.","sourceRange":{"start":{"line":410,"column":6},"end":{"line":413,"column":7}},"metadata":{},"type":"boolean"},{"name":"invalid","description":"True if the input is invalid. This property is set automatically when the input value\nchanges if auto-validating, or when the `iron-input-validate` event is heard from a child.","sourceRange":{"start":{"line":419,"column":6},"end":{"line":423,"column":7}},"metadata":{},"type":"boolean"},{"name":"focused","description":"True if the input has focus.","sourceRange":{"start":{"line":428,"column":6},"end":{"line":433,"column":7}},"metadata":{},"type":"boolean"}],"events":[{"type":"CustomEvent","name":"focused-changed","description":"Fired when the `focused` property changes.","metadata":{}}],"styling":{"cssVariables":[],"selectors":[]},"slots":[{"description":"","name":"prefix","range":{"file":"paper-input-container.html","start":{"line":356,"column":27},"end":{"line":356,"column":54}}},{"description":"","name":"label","range":{"file":"paper-input-container.html","start":{"line":359,"column":8},"end":{"line":359,"column":34}}},{"description":"","name":"input","range":{"file":"paper-input-container.html","start":{"line":360,"column":8},"end":{"line":360,"column":34}}},{"description":"","name":"suffix","range":{"file":"paper-input-container.html","start":{"line":363,"column":27},"end":{"line":363,"column":54}}},{"description":"","name":"add-on","range":{"file":"paper-input-container.html","start":{"line":372,"column":6},"end":{"line":372,"column":33}}}],"tagname":"paper-input-container","superclass":"HTMLElement"},{"description":"`<paper-input-error>` is an error message for use with `<paper-input-container>`. The error is\ndisplayed when the `<paper-input-container>` is `invalid`.\n\n    <paper-input-container>\n      <input pattern=\"[0-9]*\">\n      <paper-input-error slot=\"add-on\">Only numbers are allowed!</paper-input-error>\n    </paper-input-container>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-input-container-invalid-color` | The foreground color of the error | `--error-color`\n`--paper-input-error`                   | Mixin applied to the error        | `{}`","summary":"","path":"../../paper-input-error.html","properties":[{"name":"invalid","type":"boolean","description":"True if the error is showing.","privacy":"public","sourceRange":{"start":{"line":71,"column":6},"end":{"line":75,"column":7}},"metadata":{"polymer":{"readOnly":true}}}],"methods":[{"name":"attached","description":"","privacy":"protected","sourceRange":{"file":"paper-input-addon-behavior.html","start":{"line":21,"column":4},"end":{"line":25,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.PaperInputAddonBehavior"},{"name":"update","description":"This overrides the update function in PaperInputAddonBehavior.","privacy":"public","sourceRange":{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},"metadata":{},"params":[{"name":"state","type":"{inputElement: (Element|undefined), value: (string|undefined), invalid: boolean}","description":"    inputElement: The input element.\n    value: The input value.\n    invalid: True if the input value is invalid."}]}],"demos":[],"metadata":{},"sourceRange":{"start":{"line":60,"column":10},"end":{"line":92,"column":3}},"privacy":"public","attributes":[{"name":"invalid","description":"True if the error is showing.","sourceRange":{"start":{"line":71,"column":6},"end":{"line":75,"column":7}},"metadata":{},"type":"boolean"}],"events":[],"styling":{"cssVariables":[],"selectors":[]},"slots":[{"description":"","name":"","range":{"file":"paper-input-error.html","start":{"line":55,"column":4},"end":{"line":55,"column":17}}}],"tagname":"paper-input-error","superclass":"HTMLElement"},{"description":"This is a fresh new hell to make this element hybrid. Basically, in 2.0\n    we lost is=, so the example same template can't be used with iron-input 1.0 and 2.0.\n    Expect some conditional code (especially in the tests).","summary":"","path":"../../paper-input.html","properties":[{"name":"focused","type":"boolean","description":"If true, the element currently has focus.","privacy":"public","sourceRange":{"file":"bower_components/iron-behaviors/iron-control-state.html","start":{"line":25,"column":6},"end":{"line":31,"column":7}},"metadata":{"polymer":{"notify":true,"readOnly":true}},"defaultValue":"false","inheritedFrom":"Polymer.IronControlState"},{"name":"disabled","type":"boolean","description":"Set to true to disable this input. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nboth the `<paper-input-container>`'s and the input's `disabled` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":67,"column":6},"end":{"line":70,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_oldTabIndex","type":"number","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-behaviors/iron-control-state.html","start":{"line":44,"column":6},"end":{"line":46,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronControlState"},{"name":"_boundFocusBlurHandler","type":"Function","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-behaviors/iron-control-state.html","start":{"line":48,"column":6},"end":{"line":53,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronControlState"},{"name":"__handleEventRetargeting","type":"boolean","description":"","privacy":"private","sourceRange":{"file":"bower_components/iron-behaviors/iron-control-state.html","start":{"line":55,"column":6},"end":{"line":60,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronControlState"},{"name":"keyEventTarget","type":"?EventTarget","description":"The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.","privacy":"public","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":278,"column":8},"end":{"line":283,"column":9}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"stopKeyboardEventPropagation","type":"boolean","description":"If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.","privacy":"public","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":289,"column":8},"end":{"line":292,"column":9}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_boundKeyHandlers","type":"Array","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":294,"column":8},"end":{"line":299,"column":9}},"metadata":{"polymer":{}},"defaultValue":"[]","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_imperativeKeyBindings","type":"Object","description":"own properties of everything on the \"prototype\".","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":303,"column":8},"end":{"line":308,"column":9}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"keyBindings","type":"Object","description":"","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":369,"column":4},"end":{"line":371,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"label","type":"string","description":"The label for this input. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\n`<label>`'s content and `hidden` property, e.g.\n`<label hidden$=\"[[!label]]\">[[label]]</label>` in your `template`","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":47,"column":6},"end":{"line":49,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"value","type":"string","description":"The value for this element.","privacy":"public","sourceRange":{"file":"bower_components/iron-form-element-behavior/iron-form-element-behavior.html","start":{"line":47,"column":6},"end":{"line":50,"column":7}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"Polymer.IronFormElementBehavior"},{"name":"invalid","type":"boolean","description":"Returns true if the value is invalid. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to both the\n`<paper-input-container>`'s and the input's `invalid` property.\n\nIf `autoValidate` is true, the `invalid` attribute is managed automatically,\nwhich can clobber attempts to manage it manually.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":80,"column":6},"end":{"line":84,"column":7}},"metadata":{"polymer":{"notify":true}},"defaultValue":"false","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"allowedPattern","type":"string","description":"Set this to specify the pattern allowed by `preventInvalidInput`. If\nyou're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `allowedPattern`\nproperty.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":92,"column":6},"end":{"line":94,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"type","type":"string","description":"The type of the input. The supported types are `text`, `number` and `password`.\nIf you're using PaperInputBehavior to implement your own paper-input-like element,\nbind this to the `<input is=\"iron-input\">`'s `type` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":101,"column":6},"end":{"line":103,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"list","type":"string","description":"The datalist of the input (if any). This should match the id of an existing `<datalist>`.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `list` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":110,"column":6},"end":{"line":112,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"pattern","type":"string","description":"A pattern to validate the `input` with. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<input is=\"iron-input\">`'s `pattern` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":119,"column":6},"end":{"line":121,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"required","type":"boolean","description":"Set to true to mark the input as required. If used in a form, a\ncustom element that uses this behavior should also use\nPolymer.IronValidatableBehavior and define a custom validation method.\nOtherwise, a `required` element will always be considered valid.\nIt's also strongly recommended to provide a visual style for the element\nwhen its value is invalid.","privacy":"public","sourceRange":{"file":"bower_components/iron-form-element-behavior/iron-form-element-behavior.html","start":{"line":60,"column":6},"end":{"line":63,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.IronFormElementBehavior"},{"name":"errorMessage","type":"string","description":"The error message to display when the input is invalid. If you're using\nPaperInputBehavior to implement your own paper-input-like element,\nbind this to the `<paper-input-error>`'s content, if using.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":138,"column":6},"end":{"line":140,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"charCounter","type":"boolean","description":"Set to true to show a character counter.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":145,"column":6},"end":{"line":148,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"noLabelFloat","type":"boolean","description":"Set to true to disable the floating label. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<paper-input-container>`'s `noLabelFloat` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":155,"column":6},"end":{"line":158,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"alwaysFloatLabel","type":"boolean","description":"Set to true to always float the label. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<paper-input-container>`'s `alwaysFloatLabel` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":165,"column":6},"end":{"line":168,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"autoValidate","type":"boolean","description":"Set to true to auto-validate the input value. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<paper-input-container>`'s `autoValidate` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":175,"column":6},"end":{"line":178,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"validator","type":"string","description":"Name of the validator to use. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<input is=\"iron-input\">`'s `validator` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":185,"column":6},"end":{"line":187,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"autocomplete","type":"string","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autocomplete` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":195,"column":6},"end":{"line":198,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"off\"","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"autofocus","type":"boolean","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autofocus` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":204,"column":6},"end":{"line":207,"column":7}},"metadata":{"polymer":{"observer":"\"_autofocusChanged\""}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"inputmode","type":"string","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `inputmode` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":213,"column":6},"end":{"line":215,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"minlength","type":"number","description":"The minimum length of the input value.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `minlength` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":222,"column":6},"end":{"line":224,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"maxlength","type":"number","description":"The maximum length of the input value.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `maxlength` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":231,"column":6},"end":{"line":233,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"min","type":"string","description":"The minimum (numeric or date-time) input value.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `min` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":240,"column":6},"end":{"line":242,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"max","type":"string","description":"The maximum (numeric or date-time) input value.\nCan be a String (e.g. `\"2000-01-01\"`) or a Number (e.g. `2`).\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `max` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":250,"column":6},"end":{"line":252,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"step","type":"string","description":"Limits the numeric or date-time increments.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `step` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":259,"column":6},"end":{"line":261,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"name","type":"string","description":"The name of this element.","privacy":"public","sourceRange":{"file":"bower_components/iron-form-element-behavior/iron-form-element-behavior.html","start":{"line":40,"column":6},"end":{"line":42,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronFormElementBehavior"},{"name":"placeholder","type":"string","description":"A placeholder string in addition to the label. If this is set, the label will always float.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":274,"column":6},"end":{"line":278,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"\"","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"readonly","type":"boolean","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `readonly` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":284,"column":6},"end":{"line":287,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"size","type":"number","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `size` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":293,"column":6},"end":{"line":295,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"autocapitalize","type":"string","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autocapitalize` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":303,"column":6},"end":{"line":306,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"none\"","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"autocorrect","type":"string","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autocorrect` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":312,"column":6},"end":{"line":315,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"off\"","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"autosave","type":"string","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autosave` property,\nused with type=search.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":322,"column":6},"end":{"line":324,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"results","type":"number","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `results` property,\nused with type=search.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":331,"column":6},"end":{"line":333,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"accept","type":"string","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `accept` property,\nused with type=file.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":340,"column":6},"end":{"line":342,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"multiple","type":"boolean","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the`<input is=\"iron-input\">`'s `multiple` property,\nused with type=file.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":349,"column":6},"end":{"line":351,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_ariaDescribedBy","type":"string","description":"","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":353,"column":6},"end":{"line":356,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"\"","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_ariaLabelledBy","type":"string","description":"","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":358,"column":6},"end":{"line":361,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"\"","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"hostAttributes","type":"Object","description":"","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":373,"column":4},"end":{"line":375,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_parentForm","type":"Object","description":"The form that the element is registered to.","privacy":"protected","sourceRange":{"file":"bower_components/iron-form-element-behavior/iron-form-element-behavior.html","start":{"line":68,"column":6},"end":{"line":70,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronFormElementBehavior"},{"name":"attached","type":"Conditional","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-form-element-behavior/iron-form-element-behavior.html","start":{"line":73,"column":4},"end":{"line":77,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronFormElementBehavior"},{"name":"detached","type":"Conditional","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-form-element-behavior/iron-form-element-behavior.html","start":{"line":79,"column":4},"end":{"line":83,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronFormElementBehavior"},{"name":"_focusableElement","type":"Function","description":"Returns a reference to the focusable element. Overridden from PaperInputBehavior\nto correctly focus the native input.","privacy":"protected","sourceRange":{"start":{"line":276,"column":4},"end":{"line":278,"column":5}},"metadata":{"polymer":{"readOnly":false}}}],"methods":[{"name":"ready","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-behaviors/iron-control-state.html","start":{"line":67,"column":4},"end":{"line":70,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronControlState"},{"name":"_focusBlurHandler","description":"Forward focus to inputElement. Overriden from IronControlState.","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":442,"column":4},"end":{"line":449,"column":5}},"metadata":{},"params":[{"name":"event"}],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_disabledChanged","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-behaviors/iron-control-state.html","start":{"line":98,"column":4},"end":{"line":109,"column":5}},"metadata":{},"params":[{"name":"disabled"},{"name":"old"}],"inheritedFrom":"Polymer.IronControlState"},{"name":"_changedControlState","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-behaviors/iron-control-state.html","start":{"line":111,"column":4},"end":{"line":116,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronControlState"},{"name":"registered","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":323,"column":6},"end":{"line":325,"column":7}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"attached","description":"","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":398,"column":4},"end":{"line":408,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"detached","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":331,"column":6},"end":{"line":333,"column":7}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"addOwnKeyBinding","description":"Can be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.","privacy":"public","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":340,"column":6},"end":{"line":344,"column":7}},"metadata":{},"params":[{"name":"eventString"},{"name":"handlerName"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"removeOwnKeyBindings","description":"When called, will remove all imperatively-added key bindings.","privacy":"public","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":349,"column":6},"end":{"line":353,"column":7}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"keyboardEventMatchesKeys","description":"Returns true if a keyboard event matches `eventString`.","privacy":"public","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":362,"column":6},"end":{"line":370,"column":7}},"metadata":{},"params":[{"name":"event","type":"KeyboardEvent"},{"name":"eventString","type":"string"}],"return":{"type":"boolean"},"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_collectKeyBindings","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":372,"column":6},"end":{"line":382,"column":7}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_prepKeyBindings","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":384,"column":6},"end":{"line":405,"column":7}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_addKeyBinding","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":407,"column":6},"end":{"line":417,"column":7}},"metadata":{},"params":[{"name":"eventString"},{"name":"handlerName"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_resetKeyEventListeners","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":419,"column":6},"end":{"line":425,"column":7}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_listenKeyEventListeners","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":427,"column":6},"end":{"line":439,"column":7}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_unlistenKeyEventListeners","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":441,"column":6},"end":{"line":456,"column":7}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_onKeyBindingEvent","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":458,"column":6},"end":{"line":479,"column":7}},"metadata":{},"params":[{"name":"keyBindings"},{"name":"event"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_triggerKeyHandler","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":481,"column":6},"end":{"line":492,"column":7}},"metadata":{},"params":[{"name":"keyCombo"},{"name":"handlerName"},{"name":"keyboardEvent"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"inputElement","description":"Returns a reference to the input element.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":380,"column":4},"end":{"line":382,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_focusableElement","description":"Returns a reference to the focusable element.","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":387,"column":4},"end":{"line":389,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"created","description":"","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":391,"column":4},"end":{"line":396,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_appendStringWithSpace","description":"","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":410,"column":4},"end":{"line":417,"column":5}},"metadata":{},"params":[{"name":"str"},{"name":"more"}],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_onAddonAttached","description":"","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":419,"column":4},"end":{"line":428,"column":5}},"metadata":{},"params":[{"name":"event"}],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"validate","description":"Validates the input element and sets an error style if needed.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":435,"column":4},"end":{"line":437,"column":5}},"metadata":{},"params":[],"return":{"type":"boolean"},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_onShiftTabDown","description":"Handler that is called when a shift+tab keypress is detected by the menu.","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":456,"column":4},"end":{"line":464,"column":5}},"metadata":{},"params":[{"name":"event","type":"CustomEvent","description":"A key combination event."}],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_handleAutoValidate","description":"If `autoValidate` is true, then validates the element.","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":469,"column":4},"end":{"line":472,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"updateValueAndPreserveCaret","description":"Restores the cursor to its original position after updating the value.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":478,"column":4},"end":{"line":494,"column":5}},"metadata":{},"params":[{"name":"newValue","type":"string","description":"The value that should be saved."}],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_computeAlwaysFloatLabel","description":"","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":496,"column":4},"end":{"line":498,"column":5}},"metadata":{},"params":[{"name":"alwaysFloatLabel"},{"name":"placeholder"}],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_updateAriaLabelledBy","description":"","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":500,"column":4},"end":{"line":514,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_onChange","description":"","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":516,"column":4},"end":{"line":527,"column":5}},"metadata":{},"params":[{"name":"event"}],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_autofocusChanged","description":"","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":529,"column":4},"end":{"line":554,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"beforeRegister","description":"","privacy":"protected","sourceRange":{"start":{"line":255,"column":4},"end":{"line":270,"column":5}},"metadata":{},"params":[]},{"name":"_onIronInputReady","description":"","privacy":"protected","sourceRange":{"start":{"line":287,"column":4},"end":{"line":297,"column":5}},"metadata":{},"params":[]}],"demos":[],"metadata":{},"sourceRange":{"start":{"line":247,"column":10},"end":{"line":298,"column":3}},"privacy":"public","attributes":[{"name":"focused","description":"If true, the element currently has focus.","sourceRange":{"file":"bower_components/iron-behaviors/iron-control-state.html","start":{"line":25,"column":6},"end":{"line":31,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.IronControlState"},{"name":"disabled","description":"Set to true to disable this input. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nboth the `<paper-input-container>`'s and the input's `disabled` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":67,"column":6},"end":{"line":70,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"key-event-target","description":"The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":278,"column":8},"end":{"line":283,"column":9}},"metadata":{},"type":"?EventTarget","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"stop-keyboard-event-propagation","description":"If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":289,"column":8},"end":{"line":292,"column":9}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"label","description":"The label for this input. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\n`<label>`'s content and `hidden` property, e.g.\n`<label hidden$=\"[[!label]]\">[[label]]</label>` in your `template`","sourceRange":{"file":"paper-input-behavior.html","start":{"line":47,"column":6},"end":{"line":49,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"value","description":"The value for this element.","sourceRange":{"file":"bower_components/iron-form-element-behavior/iron-form-element-behavior.html","start":{"line":47,"column":6},"end":{"line":50,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.IronFormElementBehavior"},{"name":"invalid","description":"Returns true if the value is invalid. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to both the\n`<paper-input-container>`'s and the input's `invalid` property.\n\nIf `autoValidate` is true, the `invalid` attribute is managed automatically,\nwhich can clobber attempts to manage it manually.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":80,"column":6},"end":{"line":84,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"allowed-pattern","description":"Set this to specify the pattern allowed by `preventInvalidInput`. If\nyou're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `allowedPattern`\nproperty.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":92,"column":6},"end":{"line":94,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"type","description":"The type of the input. The supported types are `text`, `number` and `password`.\nIf you're using PaperInputBehavior to implement your own paper-input-like element,\nbind this to the `<input is=\"iron-input\">`'s `type` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":101,"column":6},"end":{"line":103,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"list","description":"The datalist of the input (if any). This should match the id of an existing `<datalist>`.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `list` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":110,"column":6},"end":{"line":112,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"pattern","description":"A pattern to validate the `input` with. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<input is=\"iron-input\">`'s `pattern` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":119,"column":6},"end":{"line":121,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"required","description":"Set to true to mark the input as required. If used in a form, a\ncustom element that uses this behavior should also use\nPolymer.IronValidatableBehavior and define a custom validation method.\nOtherwise, a `required` element will always be considered valid.\nIt's also strongly recommended to provide a visual style for the element\nwhen its value is invalid.","sourceRange":{"file":"bower_components/iron-form-element-behavior/iron-form-element-behavior.html","start":{"line":60,"column":6},"end":{"line":63,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.IronFormElementBehavior"},{"name":"error-message","description":"The error message to display when the input is invalid. If you're using\nPaperInputBehavior to implement your own paper-input-like element,\nbind this to the `<paper-input-error>`'s content, if using.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":138,"column":6},"end":{"line":140,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"char-counter","description":"Set to true to show a character counter.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":145,"column":6},"end":{"line":148,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"no-label-float","description":"Set to true to disable the floating label. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<paper-input-container>`'s `noLabelFloat` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":155,"column":6},"end":{"line":158,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"always-float-label","description":"Set to true to always float the label. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<paper-input-container>`'s `alwaysFloatLabel` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":165,"column":6},"end":{"line":168,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"auto-validate","description":"Set to true to auto-validate the input value. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<paper-input-container>`'s `autoValidate` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":175,"column":6},"end":{"line":178,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"validator","description":"Name of the validator to use. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<input is=\"iron-input\">`'s `validator` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":185,"column":6},"end":{"line":187,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"autocomplete","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autocomplete` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":195,"column":6},"end":{"line":198,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"autofocus","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autofocus` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":204,"column":6},"end":{"line":207,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"inputmode","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `inputmode` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":213,"column":6},"end":{"line":215,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"minlength","description":"The minimum length of the input value.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `minlength` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":222,"column":6},"end":{"line":224,"column":7}},"metadata":{},"type":"number","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"maxlength","description":"The maximum length of the input value.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `maxlength` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":231,"column":6},"end":{"line":233,"column":7}},"metadata":{},"type":"number","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"min","description":"The minimum (numeric or date-time) input value.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `min` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":240,"column":6},"end":{"line":242,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"max","description":"The maximum (numeric or date-time) input value.\nCan be a String (e.g. `\"2000-01-01\"`) or a Number (e.g. `2`).\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `max` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":250,"column":6},"end":{"line":252,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"step","description":"Limits the numeric or date-time increments.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `step` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":259,"column":6},"end":{"line":261,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"name","description":"The name of this element.","sourceRange":{"file":"bower_components/iron-form-element-behavior/iron-form-element-behavior.html","start":{"line":40,"column":6},"end":{"line":42,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.IronFormElementBehavior"},{"name":"placeholder","description":"A placeholder string in addition to the label. If this is set, the label will always float.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":274,"column":6},"end":{"line":278,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"readonly","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `readonly` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":284,"column":6},"end":{"line":287,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"size","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `size` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":293,"column":6},"end":{"line":295,"column":7}},"metadata":{},"type":"number","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"autocapitalize","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autocapitalize` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":303,"column":6},"end":{"line":306,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"autocorrect","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autocorrect` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":312,"column":6},"end":{"line":315,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"autosave","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autosave` property,\nused with type=search.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":322,"column":6},"end":{"line":324,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"results","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `results` property,\nused with type=search.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":331,"column":6},"end":{"line":333,"column":7}},"metadata":{},"type":"number","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"accept","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `accept` property,\nused with type=file.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":340,"column":6},"end":{"line":342,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"multiple","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the`<input is=\"iron-input\">`'s `multiple` property,\nused with type=file.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":349,"column":6},"end":{"line":351,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.PaperInputBehavior"}],"events":[{"type":"CustomEvent","name":"focused-changed","description":"Fired when the `focused` property changes.","metadata":{},"inheritedFrom":"Polymer.IronControlState"},{"type":"CustomEvent","name":"disabled-changed","description":"Fired when the `disabled` property changes.","metadata":{},"inheritedFrom":"Polymer.IronControlState"},{"type":"CustomEvent","name":"change","description":"change","metadata":{},"inheritedFrom":"Polymer.PaperInputBehavior"},{"type":"CustomEvent","name":"value-changed","description":"Fired when the `value` property changes.","metadata":{},"inheritedFrom":"Polymer.IronFormElementBehavior"},{"type":"CustomEvent","name":"invalid-changed","description":"Fired when the `invalid` property changes.","metadata":{},"inheritedFrom":"Polymer.PaperInputBehavior"},{"type":"CustomEvent","name":"iron-form-element-register","description":"iron-form-element-register","metadata":{},"inheritedFrom":"Polymer.IronFormElementBehavior"},{"type":"CustomEvent","name":"iron-form-element-unregister","description":"iron-form-element-unregister","metadata":{},"inheritedFrom":"Polymer.IronFormElementBehavior"}],"styling":{"cssVariables":[],"selectors":[]},"slots":[{"description":"","name":"prefix","range":{"file":"paper-input.html","start":{"line":145,"column":6},"end":{"line":145,"column":47}}},{"description":"","name":"suffix","range":{"file":"paper-input.html","start":{"line":151,"column":6},"end":{"line":151,"column":47}}}],"tagname":"paper-input","superclass":"HTMLElement"},{"description":"`<paper-textarea>` is a multi-line text field with Material Design styling.\n\n    <paper-textarea label=\"Textarea label\"></paper-textarea>\n\nSee `Polymer.PaperInputBehavior` for more API docs.\n\n### Validation\n\nCurrently only `required` and `maxlength` validation is supported.\n\n### Styling\n\nSee `Polymer.PaperInputContainer` for a list of custom properties used to\nstyle this element.","summary":"","path":"../../paper-textarea.html","properties":[{"name":"focused","type":"boolean","description":"If true, the element currently has focus.","privacy":"public","sourceRange":{"file":"bower_components/iron-behaviors/iron-control-state.html","start":{"line":25,"column":6},"end":{"line":31,"column":7}},"metadata":{"polymer":{"notify":true,"readOnly":true}},"defaultValue":"false","inheritedFrom":"Polymer.IronControlState"},{"name":"disabled","type":"boolean","description":"Set to true to disable this input. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nboth the `<paper-input-container>`'s and the input's `disabled` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":67,"column":6},"end":{"line":70,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_oldTabIndex","type":"number","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-behaviors/iron-control-state.html","start":{"line":44,"column":6},"end":{"line":46,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronControlState"},{"name":"_boundFocusBlurHandler","type":"Function","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-behaviors/iron-control-state.html","start":{"line":48,"column":6},"end":{"line":53,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronControlState"},{"name":"__handleEventRetargeting","type":"boolean","description":"","privacy":"private","sourceRange":{"file":"bower_components/iron-behaviors/iron-control-state.html","start":{"line":55,"column":6},"end":{"line":60,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronControlState"},{"name":"keyEventTarget","type":"?EventTarget","description":"The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.","privacy":"public","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":278,"column":8},"end":{"line":283,"column":9}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"stopKeyboardEventPropagation","type":"boolean","description":"If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.","privacy":"public","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":289,"column":8},"end":{"line":292,"column":9}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_boundKeyHandlers","type":"Array","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":294,"column":8},"end":{"line":299,"column":9}},"metadata":{"polymer":{}},"defaultValue":"[]","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_imperativeKeyBindings","type":"Object","description":"own properties of everything on the \"prototype\".","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":303,"column":8},"end":{"line":308,"column":9}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"keyBindings","type":"Object","description":"","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":369,"column":4},"end":{"line":371,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"label","type":"string","description":"The label for this input. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\n`<label>`'s content and `hidden` property, e.g.\n`<label hidden$=\"[[!label]]\">[[label]]</label>` in your `template`","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":47,"column":6},"end":{"line":49,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"value","type":"string","description":"The value for this element.","privacy":"public","sourceRange":{"file":"bower_components/iron-form-element-behavior/iron-form-element-behavior.html","start":{"line":47,"column":6},"end":{"line":50,"column":7}},"metadata":{"polymer":{"notify":true}},"inheritedFrom":"Polymer.IronFormElementBehavior"},{"name":"invalid","type":"boolean","description":"Returns true if the value is invalid. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to both the\n`<paper-input-container>`'s and the input's `invalid` property.\n\nIf `autoValidate` is true, the `invalid` attribute is managed automatically,\nwhich can clobber attempts to manage it manually.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":80,"column":6},"end":{"line":84,"column":7}},"metadata":{"polymer":{"notify":true}},"defaultValue":"false","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"allowedPattern","type":"string","description":"Set this to specify the pattern allowed by `preventInvalidInput`. If\nyou're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `allowedPattern`\nproperty.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":92,"column":6},"end":{"line":94,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"type","type":"string","description":"The type of the input. The supported types are `text`, `number` and `password`.\nIf you're using PaperInputBehavior to implement your own paper-input-like element,\nbind this to the `<input is=\"iron-input\">`'s `type` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":101,"column":6},"end":{"line":103,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"list","type":"string","description":"The datalist of the input (if any). This should match the id of an existing `<datalist>`.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `list` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":110,"column":6},"end":{"line":112,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"pattern","type":"string","description":"A pattern to validate the `input` with. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<input is=\"iron-input\">`'s `pattern` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":119,"column":6},"end":{"line":121,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"required","type":"boolean","description":"Set to true to mark the input as required. If used in a form, a\ncustom element that uses this behavior should also use\nPolymer.IronValidatableBehavior and define a custom validation method.\nOtherwise, a `required` element will always be considered valid.\nIt's also strongly recommended to provide a visual style for the element\nwhen its value is invalid.","privacy":"public","sourceRange":{"file":"bower_components/iron-form-element-behavior/iron-form-element-behavior.html","start":{"line":60,"column":6},"end":{"line":63,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.IronFormElementBehavior"},{"name":"errorMessage","type":"string","description":"The error message to display when the input is invalid. If you're using\nPaperInputBehavior to implement your own paper-input-like element,\nbind this to the `<paper-input-error>`'s content, if using.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":138,"column":6},"end":{"line":140,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"charCounter","type":"boolean","description":"Set to true to show a character counter.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":145,"column":6},"end":{"line":148,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"noLabelFloat","type":"boolean","description":"Set to true to disable the floating label. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<paper-input-container>`'s `noLabelFloat` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":155,"column":6},"end":{"line":158,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"alwaysFloatLabel","type":"boolean","description":"Set to true to always float the label. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<paper-input-container>`'s `alwaysFloatLabel` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":165,"column":6},"end":{"line":168,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"autoValidate","type":"boolean","description":"Set to true to auto-validate the input value. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<paper-input-container>`'s `autoValidate` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":175,"column":6},"end":{"line":178,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"validator","type":"string","description":"Name of the validator to use. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<input is=\"iron-input\">`'s `validator` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":185,"column":6},"end":{"line":187,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"autocomplete","type":"string","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autocomplete` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":195,"column":6},"end":{"line":198,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"off\"","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"autofocus","type":"boolean","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autofocus` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":204,"column":6},"end":{"line":207,"column":7}},"metadata":{"polymer":{"observer":"\"_autofocusChanged\""}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"inputmode","type":"string","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `inputmode` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":213,"column":6},"end":{"line":215,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"minlength","type":"number","description":"The minimum length of the input value.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `minlength` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":222,"column":6},"end":{"line":224,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"maxlength","type":"number","description":"The maximum length of the input value.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `maxlength` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":231,"column":6},"end":{"line":233,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"min","type":"string","description":"The minimum (numeric or date-time) input value.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `min` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":240,"column":6},"end":{"line":242,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"max","type":"string","description":"The maximum (numeric or date-time) input value.\nCan be a String (e.g. `\"2000-01-01\"`) or a Number (e.g. `2`).\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `max` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":250,"column":6},"end":{"line":252,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"step","type":"string","description":"Limits the numeric or date-time increments.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `step` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":259,"column":6},"end":{"line":261,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"name","type":"string","description":"The name of this element.","privacy":"public","sourceRange":{"file":"bower_components/iron-form-element-behavior/iron-form-element-behavior.html","start":{"line":40,"column":6},"end":{"line":42,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronFormElementBehavior"},{"name":"placeholder","type":"string","description":"A placeholder string in addition to the label. If this is set, the label will always float.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":274,"column":6},"end":{"line":278,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"\"","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"readonly","type":"boolean","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `readonly` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":284,"column":6},"end":{"line":287,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"size","type":"number","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `size` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":293,"column":6},"end":{"line":295,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"autocapitalize","type":"string","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autocapitalize` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":303,"column":6},"end":{"line":306,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"none\"","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"autocorrect","type":"string","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autocorrect` property.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":312,"column":6},"end":{"line":315,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"off\"","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"autosave","type":"string","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autosave` property,\nused with type=search.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":322,"column":6},"end":{"line":324,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"results","type":"number","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `results` property,\nused with type=search.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":331,"column":6},"end":{"line":333,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"accept","type":"string","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `accept` property,\nused with type=file.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":340,"column":6},"end":{"line":342,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"multiple","type":"boolean","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the`<input is=\"iron-input\">`'s `multiple` property,\nused with type=file.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":349,"column":6},"end":{"line":351,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_ariaDescribedBy","type":"string","description":"","privacy":"protected","sourceRange":{"start":{"line":107,"column":6},"end":{"line":110,"column":7}},"metadata":{"polymer":{"observer":"\"_ariaDescribedByChanged\""}}},{"name":"_ariaLabelledBy","type":"string","description":"","privacy":"protected","sourceRange":{"start":{"line":102,"column":6},"end":{"line":105,"column":7}},"metadata":{"polymer":{"observer":"\"_ariaLabelledByChanged\""}}},{"name":"hostAttributes","type":"Object","description":"","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":373,"column":4},"end":{"line":375,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_parentForm","type":"Object","description":"The form that the element is registered to.","privacy":"protected","sourceRange":{"file":"bower_components/iron-form-element-behavior/iron-form-element-behavior.html","start":{"line":68,"column":6},"end":{"line":70,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronFormElementBehavior"},{"name":"attached","type":"Conditional","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-form-element-behavior/iron-form-element-behavior.html","start":{"line":73,"column":4},"end":{"line":77,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronFormElementBehavior"},{"name":"detached","type":"Conditional","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-form-element-behavior/iron-form-element-behavior.html","start":{"line":79,"column":4},"end":{"line":83,"column":5}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronFormElementBehavior"},{"name":"rows","type":"number","description":"The initial number of rows.","privacy":"public","sourceRange":{"start":{"line":119,"column":6},"end":{"line":122,"column":7}},"metadata":{"polymer":{}},"defaultValue":"1"},{"name":"maxRows","type":"number","description":"The maximum number of rows this element can grow to until it\nscrolls. 0 means no maximum.","privacy":"public","sourceRange":{"start":{"line":132,"column":6},"end":{"line":135,"column":7}},"metadata":{"polymer":{}},"defaultValue":"0"},{"name":"_focusableElement","type":"Function","description":"","privacy":"protected","sourceRange":{"start":{"line":146,"column":4},"end":{"line":148,"column":5}},"metadata":{"polymer":{"readOnly":false}}}],"methods":[{"name":"ready","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-behaviors/iron-control-state.html","start":{"line":67,"column":4},"end":{"line":70,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronControlState"},{"name":"_focusBlurHandler","description":"Forward focus to inputElement. Overriden from IronControlState.","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":442,"column":4},"end":{"line":449,"column":5}},"metadata":{},"params":[{"name":"event"}],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_disabledChanged","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-behaviors/iron-control-state.html","start":{"line":98,"column":4},"end":{"line":109,"column":5}},"metadata":{},"params":[{"name":"disabled"},{"name":"old"}],"inheritedFrom":"Polymer.IronControlState"},{"name":"_changedControlState","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-behaviors/iron-control-state.html","start":{"line":111,"column":4},"end":{"line":116,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronControlState"},{"name":"registered","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":323,"column":6},"end":{"line":325,"column":7}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"attached","description":"","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":398,"column":4},"end":{"line":408,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"detached","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":331,"column":6},"end":{"line":333,"column":7}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"addOwnKeyBinding","description":"Can be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.","privacy":"public","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":340,"column":6},"end":{"line":344,"column":7}},"metadata":{},"params":[{"name":"eventString"},{"name":"handlerName"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"removeOwnKeyBindings","description":"When called, will remove all imperatively-added key bindings.","privacy":"public","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":349,"column":6},"end":{"line":353,"column":7}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"keyboardEventMatchesKeys","description":"Returns true if a keyboard event matches `eventString`.","privacy":"public","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":362,"column":6},"end":{"line":370,"column":7}},"metadata":{},"params":[{"name":"event","type":"KeyboardEvent"},{"name":"eventString","type":"string"}],"return":{"type":"boolean"},"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_collectKeyBindings","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":372,"column":6},"end":{"line":382,"column":7}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_prepKeyBindings","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":384,"column":6},"end":{"line":405,"column":7}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_addKeyBinding","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":407,"column":6},"end":{"line":417,"column":7}},"metadata":{},"params":[{"name":"eventString"},{"name":"handlerName"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_resetKeyEventListeners","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":419,"column":6},"end":{"line":425,"column":7}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_listenKeyEventListeners","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":427,"column":6},"end":{"line":439,"column":7}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_unlistenKeyEventListeners","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":441,"column":6},"end":{"line":456,"column":7}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_onKeyBindingEvent","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":458,"column":6},"end":{"line":479,"column":7}},"metadata":{},"params":[{"name":"keyBindings"},{"name":"event"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_triggerKeyHandler","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":481,"column":6},"end":{"line":492,"column":7}},"metadata":{},"params":[{"name":"keyCombo"},{"name":"handlerName"},{"name":"keyboardEvent"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"inputElement","description":"Returns a reference to the input element.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":380,"column":4},"end":{"line":382,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_focusableElement","description":"Returns a reference to the focusable element.","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":387,"column":4},"end":{"line":389,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"created","description":"","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":391,"column":4},"end":{"line":396,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_appendStringWithSpace","description":"","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":410,"column":4},"end":{"line":417,"column":5}},"metadata":{},"params":[{"name":"str"},{"name":"more"}],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_onAddonAttached","description":"","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":419,"column":4},"end":{"line":428,"column":5}},"metadata":{},"params":[{"name":"event"}],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"validate","description":"Validates the input element and sets an error style if needed.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":435,"column":4},"end":{"line":437,"column":5}},"metadata":{},"params":[],"return":{"type":"boolean"},"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_onShiftTabDown","description":"Handler that is called when a shift+tab keypress is detected by the menu.","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":456,"column":4},"end":{"line":464,"column":5}},"metadata":{},"params":[{"name":"event","type":"CustomEvent","description":"A key combination event."}],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_handleAutoValidate","description":"If `autoValidate` is true, then validates the element.","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":469,"column":4},"end":{"line":472,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"updateValueAndPreserveCaret","description":"Restores the cursor to its original position after updating the value.","privacy":"public","sourceRange":{"file":"paper-input-behavior.html","start":{"line":478,"column":4},"end":{"line":494,"column":5}},"metadata":{},"params":[{"name":"newValue","type":"string","description":"The value that should be saved."}],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_computeAlwaysFloatLabel","description":"","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":496,"column":4},"end":{"line":498,"column":5}},"metadata":{},"params":[{"name":"alwaysFloatLabel"},{"name":"placeholder"}],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_updateAriaLabelledBy","description":"","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":500,"column":4},"end":{"line":514,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_onChange","description":"","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":516,"column":4},"end":{"line":527,"column":5}},"metadata":{},"params":[{"name":"event"}],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_autofocusChanged","description":"","privacy":"protected","sourceRange":{"file":"paper-input-behavior.html","start":{"line":529,"column":4},"end":{"line":554,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"_ariaLabelledByChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":138,"column":4},"end":{"line":140,"column":5}},"metadata":{},"params":[{"name":"ariaLabelledBy"}]},{"name":"_ariaDescribedByChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":142,"column":4},"end":{"line":144,"column":5}},"metadata":{},"params":[{"name":"ariaDescribedBy"}]}],"demos":[],"metadata":{},"sourceRange":{"start":{"line":93,"column":10},"end":{"line":149,"column":3}},"privacy":"public","attributes":[{"name":"focused","description":"If true, the element currently has focus.","sourceRange":{"file":"bower_components/iron-behaviors/iron-control-state.html","start":{"line":25,"column":6},"end":{"line":31,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.IronControlState"},{"name":"disabled","description":"Set to true to disable this input. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nboth the `<paper-input-container>`'s and the input's `disabled` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":67,"column":6},"end":{"line":70,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"key-event-target","description":"The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":278,"column":8},"end":{"line":283,"column":9}},"metadata":{},"type":"?EventTarget","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"stop-keyboard-event-propagation","description":"If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":289,"column":8},"end":{"line":292,"column":9}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"label","description":"The label for this input. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\n`<label>`'s content and `hidden` property, e.g.\n`<label hidden$=\"[[!label]]\">[[label]]</label>` in your `template`","sourceRange":{"file":"paper-input-behavior.html","start":{"line":47,"column":6},"end":{"line":49,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"value","description":"The value for this element.","sourceRange":{"file":"bower_components/iron-form-element-behavior/iron-form-element-behavior.html","start":{"line":47,"column":6},"end":{"line":50,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.IronFormElementBehavior"},{"name":"invalid","description":"Returns true if the value is invalid. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to both the\n`<paper-input-container>`'s and the input's `invalid` property.\n\nIf `autoValidate` is true, the `invalid` attribute is managed automatically,\nwhich can clobber attempts to manage it manually.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":80,"column":6},"end":{"line":84,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"allowed-pattern","description":"Set this to specify the pattern allowed by `preventInvalidInput`. If\nyou're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `allowedPattern`\nproperty.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":92,"column":6},"end":{"line":94,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"type","description":"The type of the input. The supported types are `text`, `number` and `password`.\nIf you're using PaperInputBehavior to implement your own paper-input-like element,\nbind this to the `<input is=\"iron-input\">`'s `type` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":101,"column":6},"end":{"line":103,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"list","description":"The datalist of the input (if any). This should match the id of an existing `<datalist>`.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `list` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":110,"column":6},"end":{"line":112,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"pattern","description":"A pattern to validate the `input` with. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<input is=\"iron-input\">`'s `pattern` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":119,"column":6},"end":{"line":121,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"required","description":"Set to true to mark the input as required. If used in a form, a\ncustom element that uses this behavior should also use\nPolymer.IronValidatableBehavior and define a custom validation method.\nOtherwise, a `required` element will always be considered valid.\nIt's also strongly recommended to provide a visual style for the element\nwhen its value is invalid.","sourceRange":{"file":"bower_components/iron-form-element-behavior/iron-form-element-behavior.html","start":{"line":60,"column":6},"end":{"line":63,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.IronFormElementBehavior"},{"name":"error-message","description":"The error message to display when the input is invalid. If you're using\nPaperInputBehavior to implement your own paper-input-like element,\nbind this to the `<paper-input-error>`'s content, if using.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":138,"column":6},"end":{"line":140,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"char-counter","description":"Set to true to show a character counter.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":145,"column":6},"end":{"line":148,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"no-label-float","description":"Set to true to disable the floating label. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<paper-input-container>`'s `noLabelFloat` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":155,"column":6},"end":{"line":158,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"always-float-label","description":"Set to true to always float the label. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<paper-input-container>`'s `alwaysFloatLabel` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":165,"column":6},"end":{"line":168,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"auto-validate","description":"Set to true to auto-validate the input value. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<paper-input-container>`'s `autoValidate` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":175,"column":6},"end":{"line":178,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"validator","description":"Name of the validator to use. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<input is=\"iron-input\">`'s `validator` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":185,"column":6},"end":{"line":187,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"autocomplete","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autocomplete` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":195,"column":6},"end":{"line":198,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"autofocus","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autofocus` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":204,"column":6},"end":{"line":207,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"inputmode","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `inputmode` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":213,"column":6},"end":{"line":215,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"minlength","description":"The minimum length of the input value.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `minlength` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":222,"column":6},"end":{"line":224,"column":7}},"metadata":{},"type":"number","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"maxlength","description":"The maximum length of the input value.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `maxlength` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":231,"column":6},"end":{"line":233,"column":7}},"metadata":{},"type":"number","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"min","description":"The minimum (numeric or date-time) input value.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `min` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":240,"column":6},"end":{"line":242,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"max","description":"The maximum (numeric or date-time) input value.\nCan be a String (e.g. `\"2000-01-01\"`) or a Number (e.g. `2`).\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `max` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":250,"column":6},"end":{"line":252,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"step","description":"Limits the numeric or date-time increments.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `step` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":259,"column":6},"end":{"line":261,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"name","description":"The name of this element.","sourceRange":{"file":"bower_components/iron-form-element-behavior/iron-form-element-behavior.html","start":{"line":40,"column":6},"end":{"line":42,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.IronFormElementBehavior"},{"name":"placeholder","description":"A placeholder string in addition to the label. If this is set, the label will always float.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":274,"column":6},"end":{"line":278,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"readonly","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `readonly` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":284,"column":6},"end":{"line":287,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"size","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `size` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":293,"column":6},"end":{"line":295,"column":7}},"metadata":{},"type":"number","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"autocapitalize","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autocapitalize` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":303,"column":6},"end":{"line":306,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"autocorrect","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autocorrect` property.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":312,"column":6},"end":{"line":315,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"autosave","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autosave` property,\nused with type=search.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":322,"column":6},"end":{"line":324,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"results","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `results` property,\nused with type=search.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":331,"column":6},"end":{"line":333,"column":7}},"metadata":{},"type":"number","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"accept","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `accept` property,\nused with type=file.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":340,"column":6},"end":{"line":342,"column":7}},"metadata":{},"type":"string","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"multiple","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the`<input is=\"iron-input\">`'s `multiple` property,\nused with type=file.","sourceRange":{"file":"paper-input-behavior.html","start":{"line":349,"column":6},"end":{"line":351,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.PaperInputBehavior"},{"name":"rows","description":"The initial number of rows.","sourceRange":{"start":{"line":119,"column":6},"end":{"line":122,"column":7}},"metadata":{},"type":"number"},{"name":"max-rows","description":"The maximum number of rows this element can grow to until it\nscrolls. 0 means no maximum.","sourceRange":{"start":{"line":132,"column":6},"end":{"line":135,"column":7}},"metadata":{},"type":"number"}],"events":[{"type":"CustomEvent","name":"focused-changed","description":"Fired when the `focused` property changes.","metadata":{},"inheritedFrom":"Polymer.IronControlState"},{"type":"CustomEvent","name":"disabled-changed","description":"Fired when the `disabled` property changes.","metadata":{},"inheritedFrom":"Polymer.IronControlState"},{"type":"CustomEvent","name":"change","description":"change","metadata":{},"inheritedFrom":"Polymer.PaperInputBehavior"},{"type":"CustomEvent","name":"value-changed","description":"Fired when the `value` property changes.","metadata":{},"inheritedFrom":"Polymer.IronFormElementBehavior"},{"type":"CustomEvent","name":"invalid-changed","description":"Fired when the `invalid` property changes.","metadata":{},"inheritedFrom":"Polymer.PaperInputBehavior"},{"type":"CustomEvent","name":"iron-form-element-register","description":"iron-form-element-register","metadata":{},"inheritedFrom":"Polymer.IronFormElementBehavior"},{"type":"CustomEvent","name":"iron-form-element-unregister","description":"iron-form-element-unregister","metadata":{},"inheritedFrom":"Polymer.IronFormElementBehavior"}],"styling":{"cssVariables":[],"selectors":[]},"slots":[],"tagname":"paper-textarea","superclass":"HTMLElement"}],"metadata":{"polymer":{"behaviors":[{"description":"Use `Polymer.PaperInputBehavior` to implement inputs with `<paper-input-container>`. This\nbehavior is implemented by `<paper-input>`. It exposes a number of properties from\n`<paper-input-container>` and `<input is=\"iron-input\">` and they should be bound in your\ntemplate.\n\nThe input element can be accessed by the `inputElement` property if you need to access\nproperties or methods that are not exposed.","summary":"","path":"../../paper-input-behavior.html","properties":[{"name":"focused","type":"boolean","description":"If true, the element currently has focus.","privacy":"public","sourceRange":{"file":"bower_components/iron-behaviors/iron-control-state.html","start":{"line":25,"column":6},"end":{"line":31,"column":7}},"metadata":{"polymer":{"notify":true,"readOnly":true}},"defaultValue":"false","inheritedFrom":"Polymer.IronControlState"},{"name":"disabled","type":"boolean","description":"Set to true to disable this input. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nboth the `<paper-input-container>`'s and the input's `disabled` property.","privacy":"public","sourceRange":{"start":{"line":67,"column":6},"end":{"line":70,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"_oldTabIndex","type":"number","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-behaviors/iron-control-state.html","start":{"line":44,"column":6},"end":{"line":46,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronControlState"},{"name":"_boundFocusBlurHandler","type":"Function","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-behaviors/iron-control-state.html","start":{"line":48,"column":6},"end":{"line":53,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronControlState"},{"name":"__handleEventRetargeting","type":"boolean","description":"","privacy":"private","sourceRange":{"file":"bower_components/iron-behaviors/iron-control-state.html","start":{"line":55,"column":6},"end":{"line":60,"column":7}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronControlState"},{"name":"keyEventTarget","type":"?EventTarget","description":"The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.","privacy":"public","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":278,"column":8},"end":{"line":283,"column":9}},"metadata":{"polymer":{}},"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"stopKeyboardEventPropagation","type":"boolean","description":"If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.","privacy":"public","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":289,"column":8},"end":{"line":292,"column":9}},"metadata":{"polymer":{}},"defaultValue":"false","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_boundKeyHandlers","type":"Array","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":294,"column":8},"end":{"line":299,"column":9}},"metadata":{"polymer":{}},"defaultValue":"[]","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_imperativeKeyBindings","type":"Object","description":"own properties of everything on the \"prototype\".","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":303,"column":8},"end":{"line":308,"column":9}},"metadata":{"polymer":{}},"defaultValue":"{}","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"keyBindings","type":"Object","description":"","privacy":"public","sourceRange":{"start":{"line":369,"column":4},"end":{"line":371,"column":5}},"metadata":{"polymer":{}}},{"name":"label","type":"string","description":"The label for this input. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\n`<label>`'s content and `hidden` property, e.g.\n`<label hidden$=\"[[!label]]\">[[label]]</label>` in your `template`","privacy":"public","sourceRange":{"start":{"line":47,"column":6},"end":{"line":49,"column":7}},"metadata":{"polymer":{}}},{"name":"value","type":"string","description":"The value for this input. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<iron-input>`'s `bindValue`\nproperty, or the value property of your input that is `notify:true`.","privacy":"public","sourceRange":{"start":{"line":57,"column":6},"end":{"line":60,"column":7}},"metadata":{"polymer":{"notify":true}}},{"name":"invalid","type":"boolean","description":"Returns true if the value is invalid. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to both the\n`<paper-input-container>`'s and the input's `invalid` property.\n\nIf `autoValidate` is true, the `invalid` attribute is managed automatically,\nwhich can clobber attempts to manage it manually.","privacy":"public","sourceRange":{"start":{"line":80,"column":6},"end":{"line":84,"column":7}},"metadata":{"polymer":{"notify":true}},"defaultValue":"false"},{"name":"allowedPattern","type":"string","description":"Set this to specify the pattern allowed by `preventInvalidInput`. If\nyou're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `allowedPattern`\nproperty.","privacy":"public","sourceRange":{"start":{"line":92,"column":6},"end":{"line":94,"column":7}},"metadata":{"polymer":{}}},{"name":"type","type":"string","description":"The type of the input. The supported types are `text`, `number` and `password`.\nIf you're using PaperInputBehavior to implement your own paper-input-like element,\nbind this to the `<input is=\"iron-input\">`'s `type` property.","privacy":"public","sourceRange":{"start":{"line":101,"column":6},"end":{"line":103,"column":7}},"metadata":{"polymer":{}}},{"name":"list","type":"string","description":"The datalist of the input (if any). This should match the id of an existing `<datalist>`.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `list` property.","privacy":"public","sourceRange":{"start":{"line":110,"column":6},"end":{"line":112,"column":7}},"metadata":{"polymer":{}}},{"name":"pattern","type":"string","description":"A pattern to validate the `input` with. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<input is=\"iron-input\">`'s `pattern` property.","privacy":"public","sourceRange":{"start":{"line":119,"column":6},"end":{"line":121,"column":7}},"metadata":{"polymer":{}}},{"name":"required","type":"boolean","description":"Set to true to mark the input as required. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<input is=\"iron-input\">`'s `required` property.","privacy":"public","sourceRange":{"start":{"line":128,"column":6},"end":{"line":131,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"errorMessage","type":"string","description":"The error message to display when the input is invalid. If you're using\nPaperInputBehavior to implement your own paper-input-like element,\nbind this to the `<paper-input-error>`'s content, if using.","privacy":"public","sourceRange":{"start":{"line":138,"column":6},"end":{"line":140,"column":7}},"metadata":{"polymer":{}}},{"name":"charCounter","type":"boolean","description":"Set to true to show a character counter.","privacy":"public","sourceRange":{"start":{"line":145,"column":6},"end":{"line":148,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"noLabelFloat","type":"boolean","description":"Set to true to disable the floating label. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<paper-input-container>`'s `noLabelFloat` property.","privacy":"public","sourceRange":{"start":{"line":155,"column":6},"end":{"line":158,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"alwaysFloatLabel","type":"boolean","description":"Set to true to always float the label. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<paper-input-container>`'s `alwaysFloatLabel` property.","privacy":"public","sourceRange":{"start":{"line":165,"column":6},"end":{"line":168,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"autoValidate","type":"boolean","description":"Set to true to auto-validate the input value. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<paper-input-container>`'s `autoValidate` property.","privacy":"public","sourceRange":{"start":{"line":175,"column":6},"end":{"line":178,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"validator","type":"string","description":"Name of the validator to use. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<input is=\"iron-input\">`'s `validator` property.","privacy":"public","sourceRange":{"start":{"line":185,"column":6},"end":{"line":187,"column":7}},"metadata":{"polymer":{}}},{"name":"autocomplete","type":"string","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autocomplete` property.","privacy":"public","sourceRange":{"start":{"line":195,"column":6},"end":{"line":198,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"off\""},{"name":"autofocus","type":"boolean","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autofocus` property.","privacy":"public","sourceRange":{"start":{"line":204,"column":6},"end":{"line":207,"column":7}},"metadata":{"polymer":{"observer":"\"_autofocusChanged\""}}},{"name":"inputmode","type":"string","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `inputmode` property.","privacy":"public","sourceRange":{"start":{"line":213,"column":6},"end":{"line":215,"column":7}},"metadata":{"polymer":{}}},{"name":"minlength","type":"number","description":"The minimum length of the input value.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `minlength` property.","privacy":"public","sourceRange":{"start":{"line":222,"column":6},"end":{"line":224,"column":7}},"metadata":{"polymer":{}}},{"name":"maxlength","type":"number","description":"The maximum length of the input value.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `maxlength` property.","privacy":"public","sourceRange":{"start":{"line":231,"column":6},"end":{"line":233,"column":7}},"metadata":{"polymer":{}}},{"name":"min","type":"string","description":"The minimum (numeric or date-time) input value.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `min` property.","privacy":"public","sourceRange":{"start":{"line":240,"column":6},"end":{"line":242,"column":7}},"metadata":{"polymer":{}}},{"name":"max","type":"string","description":"The maximum (numeric or date-time) input value.\nCan be a String (e.g. `\"2000-01-01\"`) or a Number (e.g. `2`).\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `max` property.","privacy":"public","sourceRange":{"start":{"line":250,"column":6},"end":{"line":252,"column":7}},"metadata":{"polymer":{}}},{"name":"step","type":"string","description":"Limits the numeric or date-time increments.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `step` property.","privacy":"public","sourceRange":{"start":{"line":259,"column":6},"end":{"line":261,"column":7}},"metadata":{"polymer":{}}},{"name":"name","type":"string","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `name` property.","privacy":"public","sourceRange":{"start":{"line":267,"column":6},"end":{"line":269,"column":7}},"metadata":{"polymer":{}}},{"name":"placeholder","type":"string","description":"A placeholder string in addition to the label. If this is set, the label will always float.","privacy":"public","sourceRange":{"start":{"line":274,"column":6},"end":{"line":278,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"\""},{"name":"readonly","type":"boolean","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `readonly` property.","privacy":"public","sourceRange":{"start":{"line":284,"column":6},"end":{"line":287,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"},{"name":"size","type":"number","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `size` property.","privacy":"public","sourceRange":{"start":{"line":293,"column":6},"end":{"line":295,"column":7}},"metadata":{"polymer":{}}},{"name":"autocapitalize","type":"string","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autocapitalize` property.","privacy":"public","sourceRange":{"start":{"line":303,"column":6},"end":{"line":306,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"none\""},{"name":"autocorrect","type":"string","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autocorrect` property.","privacy":"public","sourceRange":{"start":{"line":312,"column":6},"end":{"line":315,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"off\""},{"name":"autosave","type":"string","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autosave` property,\nused with type=search.","privacy":"public","sourceRange":{"start":{"line":322,"column":6},"end":{"line":324,"column":7}},"metadata":{"polymer":{}}},{"name":"results","type":"number","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `results` property,\nused with type=search.","privacy":"public","sourceRange":{"start":{"line":331,"column":6},"end":{"line":333,"column":7}},"metadata":{"polymer":{}}},{"name":"accept","type":"string","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `accept` property,\nused with type=file.","privacy":"public","sourceRange":{"start":{"line":340,"column":6},"end":{"line":342,"column":7}},"metadata":{"polymer":{}}},{"name":"multiple","type":"boolean","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the`<input is=\"iron-input\">`'s `multiple` property,\nused with type=file.","privacy":"public","sourceRange":{"start":{"line":349,"column":6},"end":{"line":351,"column":7}},"metadata":{"polymer":{}}},{"name":"_ariaDescribedBy","type":"string","description":"","privacy":"protected","sourceRange":{"start":{"line":353,"column":6},"end":{"line":356,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"\""},{"name":"_ariaLabelledBy","type":"string","description":"","privacy":"protected","sourceRange":{"start":{"line":358,"column":6},"end":{"line":361,"column":7}},"metadata":{"polymer":{}},"defaultValue":"\"\""},{"name":"hostAttributes","type":"Object","description":"","privacy":"protected","sourceRange":{"start":{"line":373,"column":4},"end":{"line":375,"column":5}},"metadata":{"polymer":{}}}],"methods":[{"name":"ready","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-behaviors/iron-control-state.html","start":{"line":67,"column":4},"end":{"line":70,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronControlState"},{"name":"_focusBlurHandler","description":"Forward focus to inputElement. Overriden from IronControlState.","privacy":"protected","sourceRange":{"start":{"line":442,"column":4},"end":{"line":449,"column":5}},"metadata":{},"params":[{"name":"event"}]},{"name":"_disabledChanged","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-behaviors/iron-control-state.html","start":{"line":98,"column":4},"end":{"line":109,"column":5}},"metadata":{},"params":[{"name":"disabled"},{"name":"old"}],"inheritedFrom":"Polymer.IronControlState"},{"name":"_changedControlState","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-behaviors/iron-control-state.html","start":{"line":111,"column":4},"end":{"line":116,"column":5}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronControlState"},{"name":"registered","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":323,"column":6},"end":{"line":325,"column":7}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"attached","description":"","privacy":"protected","sourceRange":{"start":{"line":398,"column":4},"end":{"line":408,"column":5}},"metadata":{},"params":[]},{"name":"detached","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":331,"column":6},"end":{"line":333,"column":7}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"addOwnKeyBinding","description":"Can be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.","privacy":"public","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":340,"column":6},"end":{"line":344,"column":7}},"metadata":{},"params":[{"name":"eventString"},{"name":"handlerName"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"removeOwnKeyBindings","description":"When called, will remove all imperatively-added key bindings.","privacy":"public","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":349,"column":6},"end":{"line":353,"column":7}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"keyboardEventMatchesKeys","description":"Returns true if a keyboard event matches `eventString`.","privacy":"public","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":362,"column":6},"end":{"line":370,"column":7}},"metadata":{},"params":[{"name":"event","type":"KeyboardEvent"},{"name":"eventString","type":"string"}],"return":{"type":"boolean"},"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_collectKeyBindings","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":372,"column":6},"end":{"line":382,"column":7}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_prepKeyBindings","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":384,"column":6},"end":{"line":405,"column":7}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_addKeyBinding","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":407,"column":6},"end":{"line":417,"column":7}},"metadata":{},"params":[{"name":"eventString"},{"name":"handlerName"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_resetKeyEventListeners","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":419,"column":6},"end":{"line":425,"column":7}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_listenKeyEventListeners","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":427,"column":6},"end":{"line":439,"column":7}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_unlistenKeyEventListeners","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":441,"column":6},"end":{"line":456,"column":7}},"metadata":{},"params":[],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_onKeyBindingEvent","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":458,"column":6},"end":{"line":479,"column":7}},"metadata":{},"params":[{"name":"keyBindings"},{"name":"event"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"_triggerKeyHandler","description":"","privacy":"protected","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":481,"column":6},"end":{"line":492,"column":7}},"metadata":{},"params":[{"name":"keyCombo"},{"name":"handlerName"},{"name":"keyboardEvent"}],"inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"inputElement","description":"Returns a reference to the input element.","privacy":"public","sourceRange":{"start":{"line":380,"column":4},"end":{"line":382,"column":5}},"metadata":{},"params":[]},{"name":"_focusableElement","description":"Returns a reference to the focusable element.","privacy":"protected","sourceRange":{"start":{"line":387,"column":4},"end":{"line":389,"column":5}},"metadata":{},"params":[]},{"name":"created","description":"","privacy":"protected","sourceRange":{"start":{"line":391,"column":4},"end":{"line":396,"column":5}},"metadata":{},"params":[]},{"name":"_appendStringWithSpace","description":"","privacy":"protected","sourceRange":{"start":{"line":410,"column":4},"end":{"line":417,"column":5}},"metadata":{},"params":[{"name":"str"},{"name":"more"}]},{"name":"_onAddonAttached","description":"","privacy":"protected","sourceRange":{"start":{"line":419,"column":4},"end":{"line":428,"column":5}},"metadata":{},"params":[{"name":"event"}]},{"name":"validate","description":"Validates the input element and sets an error style if needed.","privacy":"public","sourceRange":{"start":{"line":435,"column":4},"end":{"line":437,"column":5}},"metadata":{},"params":[],"return":{"type":"boolean"}},{"name":"_onShiftTabDown","description":"Handler that is called when a shift+tab keypress is detected by the menu.","privacy":"protected","sourceRange":{"start":{"line":456,"column":4},"end":{"line":464,"column":5}},"metadata":{},"params":[{"name":"event","type":"CustomEvent","description":"A key combination event."}]},{"name":"_handleAutoValidate","description":"If `autoValidate` is true, then validates the element.","privacy":"protected","sourceRange":{"start":{"line":469,"column":4},"end":{"line":472,"column":5}},"metadata":{},"params":[]},{"name":"updateValueAndPreserveCaret","description":"Restores the cursor to its original position after updating the value.","privacy":"public","sourceRange":{"start":{"line":478,"column":4},"end":{"line":494,"column":5}},"metadata":{},"params":[{"name":"newValue","type":"string","description":"The value that should be saved."}]},{"name":"_computeAlwaysFloatLabel","description":"","privacy":"protected","sourceRange":{"start":{"line":496,"column":4},"end":{"line":498,"column":5}},"metadata":{},"params":[{"name":"alwaysFloatLabel"},{"name":"placeholder"}]},{"name":"_updateAriaLabelledBy","description":"","privacy":"protected","sourceRange":{"start":{"line":500,"column":4},"end":{"line":514,"column":5}},"metadata":{},"params":[]},{"name":"_onChange","description":"","privacy":"protected","sourceRange":{"start":{"line":516,"column":4},"end":{"line":527,"column":5}},"metadata":{},"params":[{"name":"event"}]},{"name":"_autofocusChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":529,"column":4},"end":{"line":554,"column":5}},"metadata":{},"params":[]}],"demos":[],"metadata":{},"sourceRange":{"start":{"line":32,"column":2},"end":{"line":555,"column":4}},"privacy":"public","name":"Polymer.PaperInputBehavior","attributes":[{"name":"focused","description":"If true, the element currently has focus.","sourceRange":{"file":"bower_components/iron-behaviors/iron-control-state.html","start":{"line":25,"column":6},"end":{"line":31,"column":7}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.IronControlState"},{"name":"disabled","description":"Set to true to disable this input. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nboth the `<paper-input-container>`'s and the input's `disabled` property.","sourceRange":{"start":{"line":67,"column":6},"end":{"line":70,"column":7}},"metadata":{},"type":"boolean"},{"name":"key-event-target","description":"The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":278,"column":8},"end":{"line":283,"column":9}},"metadata":{},"type":"?EventTarget","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"stop-keyboard-event-propagation","description":"If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.","sourceRange":{"file":"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html","start":{"line":289,"column":8},"end":{"line":292,"column":9}},"metadata":{},"type":"boolean","inheritedFrom":"Polymer.IronA11yKeysBehavior"},{"name":"label","description":"The label for this input. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\n`<label>`'s content and `hidden` property, e.g.\n`<label hidden$=\"[[!label]]\">[[label]]</label>` in your `template`","sourceRange":{"start":{"line":47,"column":6},"end":{"line":49,"column":7}},"metadata":{},"type":"string"},{"name":"value","description":"The value for this input. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<iron-input>`'s `bindValue`\nproperty, or the value property of your input that is `notify:true`.","sourceRange":{"start":{"line":57,"column":6},"end":{"line":60,"column":7}},"metadata":{},"type":"string"},{"name":"invalid","description":"Returns true if the value is invalid. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to both the\n`<paper-input-container>`'s and the input's `invalid` property.\n\nIf `autoValidate` is true, the `invalid` attribute is managed automatically,\nwhich can clobber attempts to manage it manually.","sourceRange":{"start":{"line":80,"column":6},"end":{"line":84,"column":7}},"metadata":{},"type":"boolean"},{"name":"allowed-pattern","description":"Set this to specify the pattern allowed by `preventInvalidInput`. If\nyou're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `allowedPattern`\nproperty.","sourceRange":{"start":{"line":92,"column":6},"end":{"line":94,"column":7}},"metadata":{},"type":"string"},{"name":"type","description":"The type of the input. The supported types are `text`, `number` and `password`.\nIf you're using PaperInputBehavior to implement your own paper-input-like element,\nbind this to the `<input is=\"iron-input\">`'s `type` property.","sourceRange":{"start":{"line":101,"column":6},"end":{"line":103,"column":7}},"metadata":{},"type":"string"},{"name":"list","description":"The datalist of the input (if any). This should match the id of an existing `<datalist>`.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `list` property.","sourceRange":{"start":{"line":110,"column":6},"end":{"line":112,"column":7}},"metadata":{},"type":"string"},{"name":"pattern","description":"A pattern to validate the `input` with. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<input is=\"iron-input\">`'s `pattern` property.","sourceRange":{"start":{"line":119,"column":6},"end":{"line":121,"column":7}},"metadata":{},"type":"string"},{"name":"required","description":"Set to true to mark the input as required. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<input is=\"iron-input\">`'s `required` property.","sourceRange":{"start":{"line":128,"column":6},"end":{"line":131,"column":7}},"metadata":{},"type":"boolean"},{"name":"error-message","description":"The error message to display when the input is invalid. If you're using\nPaperInputBehavior to implement your own paper-input-like element,\nbind this to the `<paper-input-error>`'s content, if using.","sourceRange":{"start":{"line":138,"column":6},"end":{"line":140,"column":7}},"metadata":{},"type":"string"},{"name":"char-counter","description":"Set to true to show a character counter.","sourceRange":{"start":{"line":145,"column":6},"end":{"line":148,"column":7}},"metadata":{},"type":"boolean"},{"name":"no-label-float","description":"Set to true to disable the floating label. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<paper-input-container>`'s `noLabelFloat` property.","sourceRange":{"start":{"line":155,"column":6},"end":{"line":158,"column":7}},"metadata":{},"type":"boolean"},{"name":"always-float-label","description":"Set to true to always float the label. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<paper-input-container>`'s `alwaysFloatLabel` property.","sourceRange":{"start":{"line":165,"column":6},"end":{"line":168,"column":7}},"metadata":{},"type":"boolean"},{"name":"auto-validate","description":"Set to true to auto-validate the input value. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<paper-input-container>`'s `autoValidate` property.","sourceRange":{"start":{"line":175,"column":6},"end":{"line":178,"column":7}},"metadata":{},"type":"boolean"},{"name":"validator","description":"Name of the validator to use. If you're using PaperInputBehavior to\nimplement your own paper-input-like element, bind this to\nthe `<input is=\"iron-input\">`'s `validator` property.","sourceRange":{"start":{"line":185,"column":6},"end":{"line":187,"column":7}},"metadata":{},"type":"string"},{"name":"autocomplete","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autocomplete` property.","sourceRange":{"start":{"line":195,"column":6},"end":{"line":198,"column":7}},"metadata":{},"type":"string"},{"name":"autofocus","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autofocus` property.","sourceRange":{"start":{"line":204,"column":6},"end":{"line":207,"column":7}},"metadata":{},"type":"boolean"},{"name":"inputmode","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `inputmode` property.","sourceRange":{"start":{"line":213,"column":6},"end":{"line":215,"column":7}},"metadata":{},"type":"string"},{"name":"minlength","description":"The minimum length of the input value.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `minlength` property.","sourceRange":{"start":{"line":222,"column":6},"end":{"line":224,"column":7}},"metadata":{},"type":"number"},{"name":"maxlength","description":"The maximum length of the input value.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `maxlength` property.","sourceRange":{"start":{"line":231,"column":6},"end":{"line":233,"column":7}},"metadata":{},"type":"number"},{"name":"min","description":"The minimum (numeric or date-time) input value.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `min` property.","sourceRange":{"start":{"line":240,"column":6},"end":{"line":242,"column":7}},"metadata":{},"type":"string"},{"name":"max","description":"The maximum (numeric or date-time) input value.\nCan be a String (e.g. `\"2000-01-01\"`) or a Number (e.g. `2`).\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `max` property.","sourceRange":{"start":{"line":250,"column":6},"end":{"line":252,"column":7}},"metadata":{},"type":"string"},{"name":"step","description":"Limits the numeric or date-time increments.\nIf you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `step` property.","sourceRange":{"start":{"line":259,"column":6},"end":{"line":261,"column":7}},"metadata":{},"type":"string"},{"name":"name","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `name` property.","sourceRange":{"start":{"line":267,"column":6},"end":{"line":269,"column":7}},"metadata":{},"type":"string"},{"name":"placeholder","description":"A placeholder string in addition to the label. If this is set, the label will always float.","sourceRange":{"start":{"line":274,"column":6},"end":{"line":278,"column":7}},"metadata":{},"type":"string"},{"name":"readonly","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `readonly` property.","sourceRange":{"start":{"line":284,"column":6},"end":{"line":287,"column":7}},"metadata":{},"type":"boolean"},{"name":"size","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `size` property.","sourceRange":{"start":{"line":293,"column":6},"end":{"line":295,"column":7}},"metadata":{},"type":"number"},{"name":"autocapitalize","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autocapitalize` property.","sourceRange":{"start":{"line":303,"column":6},"end":{"line":306,"column":7}},"metadata":{},"type":"string"},{"name":"autocorrect","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autocorrect` property.","sourceRange":{"start":{"line":312,"column":6},"end":{"line":315,"column":7}},"metadata":{},"type":"string"},{"name":"autosave","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `autosave` property,\nused with type=search.","sourceRange":{"start":{"line":322,"column":6},"end":{"line":324,"column":7}},"metadata":{},"type":"string"},{"name":"results","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `results` property,\nused with type=search.","sourceRange":{"start":{"line":331,"column":6},"end":{"line":333,"column":7}},"metadata":{},"type":"number"},{"name":"accept","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the `<input is=\"iron-input\">`'s `accept` property,\nused with type=file.","sourceRange":{"start":{"line":340,"column":6},"end":{"line":342,"column":7}},"metadata":{},"type":"string"},{"name":"multiple","description":"If you're using PaperInputBehavior to implement your own paper-input-like\nelement, bind this to the`<input is=\"iron-input\">`'s `multiple` property,\nused with type=file.","sourceRange":{"start":{"line":349,"column":6},"end":{"line":351,"column":7}},"metadata":{},"type":"boolean"}],"events":[{"type":"CustomEvent","name":"focused-changed","description":"Fired when the `focused` property changes.","metadata":{},"inheritedFrom":"Polymer.IronControlState"},{"type":"CustomEvent","name":"disabled-changed","description":"Fired when the `disabled` property changes.","metadata":{},"inheritedFrom":"Polymer.IronControlState"},{"type":"CustomEvent","name":"change","description":"change","metadata":{}},{"type":"CustomEvent","name":"value-changed","description":"Fired when the `value` property changes.","metadata":{}},{"type":"CustomEvent","name":"invalid-changed","description":"Fired when the `invalid` property changes.","metadata":{}}],"styling":{"cssVariables":[],"selectors":[]},"slots":[]},{"description":"Use `Polymer.PaperInputAddonBehavior` to implement an add-on for `<paper-input-container>`. A\nadd-on appears below the input, and may display information based on the input value and\nvalidity such as a character counter or an error message.","summary":"","path":"../../paper-input-addon-behavior.html","properties":[],"methods":[{"name":"attached","description":"","privacy":"protected","sourceRange":{"start":{"line":21,"column":4},"end":{"line":25,"column":5}},"metadata":{},"params":[]},{"name":"update","description":"The function called by `<paper-input-container>` when the input value or validity changes.","privacy":"public","sourceRange":{"start":{"line":38,"column":4},"end":{"line":39,"column":5}},"metadata":{},"params":[{"name":"state","type":"{inputElement: (Element|undefined), value: (string|undefined), invalid: boolean}","description":"    inputElement: The input element.\n    value: The input value.\n    invalid: True if the input value is invalid."}]}],"demos":[],"metadata":{},"sourceRange":{"start":{"line":20,"column":2},"end":{"line":41,"column":4}},"privacy":"public","name":"Polymer.PaperInputAddonBehavior","attributes":[],"events":[],"styling":{"cssVariables":[],"selectors":[]},"slots":[]}]}}}